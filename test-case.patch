
diff --git a/node.py b/node.py
index 1ecf7dc..c8c01b8 100644
--- a/node.py
+++ b/node.py
@@ -88,15 +88,30 @@ class LRUCache:
             return node.value
         return None
 
-# Example usage
-cache = LRUCache(3)
-cache.insert("a", 1, time.time() + 5, 2)  # key "a", value 1, expires in 5 seconds, priority 2
-cache.insert("b", 2, time.time() + 10, 1)  # key "b", value 2, expires in 10 seconds, priority 1
-cache.insert("c", 3, time.time() + 15, 3)  # key "c", value 3, expires in 15 seconds, priority 3
-print(cache.get("a"))  # Should return 1
-time.sleep(6)  # Wait for "a" to expire
-print(cache.get("a"))  # Should return None as "a" is expired
-cache.insert("d", 4, time.time() + 20, 2)  # Insert "d", causing eviction if needed
-print(cache.get("b"))  # Should return 2
-print(cache.get("c"))  # Should return 3
-print(cache.get("d"))  # Should return 4
+def test_case_evict():
+    cache = LRUCache(3)
+    cache.insert("a", 1, time.time() + 60, 2)
+    cache.insert("b", 2, time.time() + 60, 1)
+    cache.insert("c", 3, time.time() + 60, 3)
+    print("Before eviction:", [cache.get(k) for k in ["a", "b", "c"]])
+    cache.insert("d", 4, time.time() + 60, 4)
+    print("After eviction:", [cache.get(k) for k in ["a", "b", "c", "d"]])
+
+def test_case_expire():
+    cache = LRUCache(3)
+    cache.insert("a", 1, time.time() + 5, 2)  # key "a", value 1, expires in 5 seconds, priority 2
+    cache.insert("b", 2, time.time() + 10, 1)  # key "b", value 2, expires in 10 seconds, priority 1
+    cache.insert("c", 3, time.time() + 15, 3)  # key "c", value 3, expires in 15 seconds, priority 3
+    print(cache.get("a"))  # Should return 1
+    time.sleep(6)  # Wait for "a" to expire
+    print(cache.get("a"))  # Should return None as "a" is expired
+    cache.insert("d", 4, time.time() + 20, 2)  # Insert "d", causing eviction if needed
+    print(cache.get("b"))  # Should return 2
+    print(cache.get("c"))  # Should return 3
+    print(cache.get("d"))  # Should return 4
+
+
+print("======================>Evict")
+test_case_evict()
+print("======================>Expire")
+test_case_expire()
